name: Echo Input

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/echo-input
        id: echo1
        with:
          input: '" "'
      - env:
          OUTPUT: ${{ steps.echo1.outputs.output }}
          TOJSON: ${{ toJSON(steps.echo1.outputs.output) }}
          JSON: ${{ steps.echo1.outputs.json }}
        run: |
          echo "Output: $OUTPUT"
          echo "toJSON: $TOJSON"
          echo "JSON: $JSON"
      - uses: ./.github/actions/echo-input
        id: echo2
        with:
          input: "\u0020"
      - env:
          OUTPUT: ${{ steps.echo2.outputs.output }}
          TOJSON: ${{ toJSON(steps.echo2.outputs.output) }}
          JSON: ${{ steps.echo2.outputs.json }}
        run: |
          echo "Output: $OUTPUT"
          echo "toJSON: $TOJSON"
          echo "JSON: $JSON"
      - uses: ./.github/actions/echo-input
        id: echo3
        with:
          input: '\u0020'
      - env:
          OUTPUT: ${{ steps.echo3.outputs.output }}
          TOJSON: ${{ toJSON(steps.echo3.outputs.output) }}
          JSON: ${{ steps.echo3.outputs.json }}
        run: |
          echo "Output: $OUTPUT"
          echo "toJSON: $TOJSON"
          echo "JSON: $JSON"
      - uses: ./.github/actions/echo-input
        id: echo4
        with:
          input: "\\u0020"
      - env:
          OUTPUT: ${{ steps.echo4.outputs.output }}
          TOJSON: ${{ toJSON(steps.echo4.outputs.output) }}
          JSON: ${{ steps.echo4.outputs.json }}
        run: |
          echo "Output: $OUTPUT"
          echo "toJSON: $TOJSON"
          echo "JSON: $JSON"
      - uses: ./.github/actions/echo-input
        id: echo5
        with:
          input: "dummy"
          json: '" "'
      - env:
          PARSED: ${{ steps.echo5.outputs.parsedJson }}
          TOJSON: ${{ toJSON(steps.echo5.outputs.parsedJson) }}
        run: |
          echo "Parsed: $PARSED"
          echo "toJSON: $TOJSON"
      - uses: ./.github/actions/echo-input
        id: echo6
        with:
          input: |2

                 Multiline text
            with indentation indicator

            		tabs!		
      - env:
          OUTPUT: ${{ steps.echo6.outputs.output }}
          OUTPUT_RAW: ${{ steps.echo6.outputs.outputRaw }}
          TOJSON: ${{ toJSON(steps.echo6.outputs.output) }}
          TOJSON_RAW: ${{ toJSON(steps.echo6.outputs.outputRaw) }}
        run: |
          echo "Output: $OUTPUT"
          echo "Output Raw: $OUTPUT_RAW"
          echo "toJSON: $TOJSON"
          echo "toJSON Raw: $TOJSON_RAW"
  replace:
    runs-on: ubuntu-latest
    steps:
      - uses: frabert/replace-string-action@master
        id: replace1
        with:
          pattern: '_'
          flags: 'g'
          string: '_replace_underscores__with__spaces_'
          replace-with: ' '
      - uses: frabert/replace-string-action@master
        id: replace2
        with:
          pattern: '_'
          flags: 'g'
          string: '_replace_underscores__with__spaces_'
          replace-with: '" "'
      - uses: frabert/replace-string-action@master
        id: replace3
        with:
          pattern: '_'
          flags: 'g'
          string: '_replace_underscores__with__spaces_'
          replace-with: "\u0020"
      - uses: frabert/replace-string-action@master
        id: replace4
        with:
          pattern: '_'
          flags: 'g'
          string: '_replace_underscores__with__spaces_'
          replace-with: "' '"
      - uses: frabert/replace-string-action@master
        id: replace5
        with:
          pattern: '_'
          flags: 'g'
          string: '_replace_underscores__with__spaces_'
          replace-with: '\u0020'
      - env:
          REPLACE1: ${{ toJSON(steps.replace1.outputs.replaced) }}
          REPLACE2: ${{ toJSON(steps.replace2.outputs.replaced) }}
          REPLACE3: ${{ toJSON(steps.replace3.outputs.replaced) }}
          REPLACE4: ${{ toJSON(steps.replace4.outputs.replaced) }}
          REPLACE5: ${{ toJSON(steps.replace5.outputs.replaced) }}
        run: |
          echo "1: $REPLACE1"
          echo "2: $REPLACE2"
          echo "3: $REPLACE3"
          echo "3: $REPLACE4"
          echo "3: $REPLACE5"
